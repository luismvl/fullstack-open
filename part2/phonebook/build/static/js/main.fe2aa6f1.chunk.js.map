{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","setFilter","onChange","e","target","value","PersonForm","addPerson","setNewName","setNewNumber","newName","newNumber","onSubmit","type","Persons","persons","handleDelete","map","person","name","number","onClick","id","baseUrl","services","getAll","axios","get","then","response","data","create","newPerson","post","remove","delete","update","updatedPerson","put","Notification","message","styles","backgroundColor","padding","fontSize","borderRadius","color","border","marginBottom","borderColor","style","App","useState","setPersons","useEffect","personService","initialData","filter","text","notification","setNotification","personsToShow","toLowerCase","indexOf","preventDefault","personExist","find","p","window","confirm","returnedPerson","setTimeout","catch","concat","error","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe2aa6f1.chunk.js","sourcesContent":["const Filter = ({ setFilter }) => {\r\n    return (\r\n        <input onChange={(e) => setFilter(e.target.value)}/>\r\n    )\r\n}\r\n\r\nexport default Filter","const PersonForm = ({ addPerson, setNewName, setNewNumber, newName, newNumber }) => {\r\n    \r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                name: <input onChange={(e) => setNewName(e.target.value)} value={newName} />\r\n            </div>\r\n            <div>\r\n                number: <input onChange={(e) => setNewNumber(e.target.value)} value={newNumber} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form >\r\n    )\r\n}\r\n\r\nexport default PersonForm","const Persons = ({ persons, handleDelete }) => {\r\n    return (\r\n        <div>\r\n            {persons.map(person => <p key={person.id}>{person.name} {person.number}\r\n            <button onClick={() => handleDelete(person.id)}>detele</button>\r\n            </p>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, updatedPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, updatedPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst services = {\r\n    getAll, create, remove, update\r\n}\r\n\r\nexport default services","import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n    if (!message) {\r\n        return null\r\n    }\r\n\r\n    const styles = {\r\n        backgroundColor: 'lightgrey',\r\n        padding: 10,\r\n        fontSize: 20,\r\n        borderRadius: 5,\r\n        color: 'DarkSlateGrey',\r\n        border: '3px solid DarkSlateGrey',\r\n        marginBottom: 16,\r\n    }\r\n    if (type === 'succes') {\r\n        styles.color = 'green'\r\n        styles.borderColor = 'green'\r\n    }\r\n    if (type === 'error') {\r\n        styles.color = 'red'\r\n        styles.borderColor = 'red'\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={styles}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  useEffect(() => {\r\n    personService.getAll().then(initialData => setPersons(initialData))\r\n  }, [])\r\n\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filter, setFilter] = useState('')\r\n  const [notification, setNotification] = useState({ text: '', type: '' })\r\n\r\n  const personsToShow = persons.filter(\r\n    person => person.name.toLowerCase().indexOf(filter.toLowerCase()) > -1)\r\n\r\n  const addPerson = (e) => {\r\n    e.preventDefault()\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n    const personExist = persons.find(p => p.name === newPerson.name)\r\n    const message = `${newName} is already added to phonebook, replace the old number with a new one?`\r\n    if (personExist && window.confirm(message)) {\r\n      personService.update(personExist.id, newPerson)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.map(p => p.id !== returnedPerson.id ? p : returnedPerson))\r\n          setNotification({ text: `Updated ${newName}`, type: 'success' })\r\n          setTimeout(() => setNotification({ text: '', type: '' }), 5000)\r\n        })\r\n        .catch(() => {\r\n          setNotification({ text: `Information of ${newName} has already been remove from server`, type: 'error' })\r\n          setTimeout(() => setNotification({ text: '', type: '' }), 5000)\r\n          setPersons(persons.filter(p => p.id !== personExist.id))\r\n        })\r\n    } else {\r\n      personService.create(newPerson)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setNotification({ text: `Added ${returnedPerson.name}`, type: 'succes' })\r\n          setTimeout(() => setNotification({ text: '', type: '' }), 5000)\r\n        })\r\n        .catch(error => {\r\n          console.log(error.response)\r\n          setNotification({ text: `Added ${error.response.data.error}`, type: 'error' })\r\n          setTimeout(() => setNotification({ text: '', type: '' }), 5000)\r\n        })\r\n    }\r\n\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const deletePerson = id => {\r\n    const person = persons.find(p => p.id === id)\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n      personService.remove(id)\r\n        .then(() => {\r\n          setPersons(persons.filter(p => p.id !== id))\r\n          setNotification({ text: `Deleted ${person.name}`, type: 'succes' })\r\n          setTimeout(() => setNotification({ text: '', type: '' }), 5000)\r\n        })\r\n        .catch(() => {\r\n          setNotification({ text: `Information of ${person.name} has already been remove from server`, type: 'error' })\r\n          setTimeout(() => setNotification({ text: '', type: '' }), 5000)\r\n          setPersons(persons.filter(p => p.id !== person.id))\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notification.text} type={notification.type} />\r\n\r\n      Search\r\n      <Filter setFilter={setFilter} />\r\n\r\n      <h3>Add new</h3>\r\n      <PersonForm addPerson={addPerson} setNewName={setNewName} newName={newName}\r\n        setNewNumber={setNewNumber} newNumber={newNumber} />\r\n\r\n      <h3>Numbers</h3>\r\n      <Persons persons={personsToShow} handleDelete={deletePerson} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}